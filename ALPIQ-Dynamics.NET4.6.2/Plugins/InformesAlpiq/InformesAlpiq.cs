// <copyright file="Plugin.cs" company="Microsoft">
// Copyright (c) 2017 All Rights Reserved
// </copyright>
// <author>Microsoft</author>
// <date>7/5/2017 11:05:45 AM</date>
// <summary>Implements the Plugin Workflow Activity.</summary>
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.1
// </auto-generated>
namespace InformesAlpiq
{
    using System;
    using System.Collections.ObjectModel;
    using System.Globalization;
    using System.Linq;
    using System.ServiceModel;
    using Microsoft.Xrm.Sdk;
    using System.Xml;

 

    /// <summary>
    /// Base class for all Plugins.
    /// </summary>    
    public class InformesAlpiq : IPlugin
    {
        #region VARIABLES Y CONSTANTES

        private ITracingService tracingService;
        private IPluginExecutionContext PluginExecutionContext; ///< Contexto de ejecución del plugin
        private IOrganizationServiceFactory factory;
        private IOrganizationService service, servicioConsultas;

        private string uriWS_llamada, uriWS_recogerFichero;
        private bool generarLog;
        private char SEPARADOR = '#';
        #endregion

        public void Execute(IServiceProvider serviceProvider)
        {
            tracingService = (ITracingService)serviceProvider.GetService(typeof(ITracingService));
            PluginExecutionContext = (IPluginExecutionContext)serviceProvider.GetService(typeof(IPluginExecutionContext));
            factory = (IOrganizationServiceFactory)serviceProvider.GetService(typeof(IOrganizationServiceFactory));
            service = factory.CreateOrganizationService(PluginExecutionContext.UserId);
            servicioConsultas = factory.CreateOrganizationService(PluginExecutionContext.UserId);

            log("------------------- PLUGIN GENERAR INFORMES -------------------");
            log("URI WS : " + uriWS_llamada);
            string guidOferta = PluginExecutionContext.InputParameters["Entity_ID"].ToString();
            string TipoInforme = PluginExecutionContext.InputParameters["TipoInforme"].ToString();
            string esPDF = PluginExecutionContext.InputParameters["esPDF"].ToString();
            log("GUID Oferta " + guidOferta );
            //throw new Exception("uriWS_llamada: " + uriWS_llamada + " -- uriWS_recogerFichero " + uriWS_recogerFichero);
            System.Net.ServicePointManager.Expect100Continue = false;
            string result = CommonWS.CommonWS.GenerarInforme(uriWS_llamada, guidOferta, uriWS_recogerFichero, TipoInforme, esPDF, generarLog);
            
            if (result != null)
            {
                PluginExecutionContext.OutputParameters["URL_Descarga"] = result;
            }
            else {
                PluginExecutionContext.OutputParameters["URL_Descarga"] = null;
            }
            //throw new Exception(String.Format("Result: {0}", result));
        }


        public InformesAlpiq(string parametros)
        {
            if (String.IsNullOrEmpty(parametros))
            {
                throw new InvalidPluginExecutionException("Conexión mal configurada.");
            }
            else
            {
                String[] arrayPar = parametros.Split(SEPARADOR);
                if (!String.IsNullOrEmpty(arrayPar[0]))
                {
                    //log(arrayPar[0]);
                    uriWS_llamada = arrayPar[0];
                }
                if (!String.IsNullOrEmpty(arrayPar[1]))
                {
                    //log(arrayPar[1]);
                    uriWS_recogerFichero = arrayPar[1];
                }
                if (!String.IsNullOrEmpty(arrayPar[2]))
                {
                    //log(arrayPar[2]);
                    generarLog = bool.Parse(arrayPar[2]);
                    //string logstring = arrayPar[2];
                }

            }
        }


        #region UTILIDADES
        private void log(string texto)
        {
            tracingService.Trace(texto);
        }
        #endregion
    }
    
}